heat_template_version: 2018-08-31

description: v1.0.0 Template for network

parameters:
  RouterName:
    description: RouterName
    type: string
    default: router

  SubnetCidr:
    description: SubnetCidr
    type: string
    default: 10.0.0.0/24
    constraints:
      - allowed_pattern: "^[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+/[0-9]+$"
  RouterIp:
    description: RouterIp
    type: string
    default: 10.0.0.1
    constraints:
      - allowed_pattern: "^[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$"

  SSHKeyName:
    description: SSHKeyName
    type: string

resources:
  ########################
  ### NETWORK & SUBNET ###
  ########################
  Network:
    type: OS::Neutron::Net
    properties:
      name: { list_join: ["-", [{ get_param: "OS::stack_name" }, "network"]] }
      admin_state_up: True
      shared: False

  Subnet:
    type: OS::Neutron::Subnet
    properties:
      name: { list_join: ["-", [{ get_param: "OS::stack_name" }, "subnet"]] }
      cidr: { get_param: SubnetCidr }
      gateway_ip: { get_param: RouterIp }
      dns_nameservers:
        - 8.8.8.8
        - 8.8.4.4
      enable_dhcp: True
      network: { get_resource: Network }

  ##############
  ### ROUTER ###
  ##############
  RouterPort:
    type: OS::Neutron::Port
    properties:
      name:
        { list_join: ["-", [{ get_param: "OS::stack_name" }, "router-port"]] }
      fixed_ips:
        - subnet_id: { get_resource: Subnet }
          ip_address: { get_param: RouterIp }
      network: { get_resource: Network }

  Router:
    type: OS::Neutron::Router
    properties:
      name: { list_join: ["-", [{ get_param: "OS::stack_name" }, "router"]] }
      admin_state_up: True
      external_gateway_info: { network: ext-net }
  RouterInterface:
    type: OS::Neutron::RouterInterface
    properties:
      router: { get_resource: Router }
      port: { get_resource: RouterPort }

  ###################
  ### JUMP SERVER ###
  ###################
  JumpPrivateSecurityGroup:
    type: OS::Neutron::SecurityGroup
    properties:
      name:
        {
          list_join:
            [
              "-",
              [{ get_param: "OS::stack_name" }, "JumpPrivateSecurityGroup"],
            ],
        }
      rules: [
          ### INGRESS RULES
          {
            direction: ingress,
            ethertype: IPv4,
            protocol: tcp,
            port_range_min: 22,
            port_range_max: 22,
            remote_ip_prefix: 0.0.0.0/0,
          },

          {
            direction: ingress,
            ethertype: IPv4,
            protocol: icmp,
            remote_ip_prefix: 0.0.0.0/0,
          },

          ### EGRESS RULES
          {
            direction: egress,
            ethertype: IPv4,
            protocol: tcp,
            port_range_min: 1,
            port_range_max: 65535,
            remote_ip_prefix: 0.0.0.0/0,
          },

          {
            direction: egress,
            ethertype: IPv4,
            protocol: udp,
            port_range_min: 1,
            port_range_max: 65535,
            remote_ip_prefix: 0.0.0.0/0,
          },

          {
            direction: egress,
            ethertype: IPv4,
            protocol: icmp,
            remote_ip_prefix: 0.0.0.0/0,
          },
        ]

  #JumpPort:
  #type: OS::Neutron::Port
  # properties:
  #  name: { list_join: [ '-', [ { get_param: 'OS::stack_name' }, 'JumpPort' ] ] }
  #  fixed_ips:
  #    - subnet_id: { get_resource: Subnet }
  #   security_groups:
  #    - { get_resource: JumpPrivateSecurityGroup }
  #    network: { get_resource: Network }

  JumpPort:
    type: OS::Neutron::Port
    properties:
      name: { list_join: ["-", [{ get_param: "OS::stack_name" }, "JumpPort"]] }
      security_groups:
        - { get_resource: JumpPrivateSecurityGroup }
      network: "ext-net"

  JumpServer:
    type: OS::Nova::Server
    properties:
      name: { list_join: ["-", [{ get_param: "OS::stack_name" }, "jump"]] }
      availability_zone: "compute1"
      flavor: "linux"
      image: "ubuntu_server_18.04_amd64_Openstack"
      key_name: { get_param: SSHKeyName }
      networks:
        - port: { get_resource: JumpPort }
      user_data_format: RAW
      user_data_update_policy: REPLACE
      user_data: |
        #!/bin/bash
        apt-get update -y
        apt-get upgrade -y
  #JumpFloatingIp:
  #  depends_on: JumpServer
  #  type: OS::Neutron::FloatingIP
  #  properties:
  #    floating_network: ext-net
  # JumpFloatingAssociation:
  #   depends_on: JumpFloatingIp
  #   type: OS::Neutron::FloatingIPAssociation
  #   properties:
  #     floatingip_id: { get_resource: JumpFloatingIp }

#      port_id: { get_resource: JumpPort }
